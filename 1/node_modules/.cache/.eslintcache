[{"/Users/kimseongjun/Desktop/web_study/React/blog/src/index.js":"1","/Users/kimseongjun/Desktop/web_study/React/blog/src/App.js":"2","/Users/kimseongjun/Desktop/web_study/React/blog/src/reportWebVitals.js":"3","/Users/kimseongjun/Documents/GitHub/React/1/src/index.js":"4","/Users/kimseongjun/Documents/GitHub/React/1/src/App.js":"5","/Users/kimseongjun/Documents/GitHub/React/1/src/reportWebVitals.js":"6"},{"size":535,"mtime":1685354594716,"results":"7","hashOfConfig":"8"},{"size":491,"mtime":1685355157847,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1685354594717,"results":"10","hashOfConfig":"8"},{"size":535,"mtime":1685354594716,"results":"11","hashOfConfig":"12"},{"size":2768,"mtime":1685790465454,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1685354594717,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l0kybu",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r9lool",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kimseongjun/Desktop/web_study/React/blog/src/index.js",[],[],"/Users/kimseongjun/Desktop/web_study/React/blog/src/App.js",[],[],"/Users/kimseongjun/Desktop/web_study/React/blog/src/reportWebVitals.js",[],[],"/Users/kimseongjun/Documents/GitHub/React/1/src/index.js",[],[],"/Users/kimseongjun/Documents/GitHub/React/1/src/App.js",["34","35","36","37","38"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  let post = '강남 우동 맛집 :)';\n  // state쓰는 이유 -> html이 자동으로 재렌더링이 된다. : 자동으로 바꿔줌\n  let [글제목, 글제목변경] = useState(['하입보이 잘 추는법', '남자 코트 추천', '배곧 공원 추천', '한라비발디1차맛집']);\n  let [날짜, c] = useState(['2023년 5월 10일', '2023년 5월 20일', '2023년 5월 25일', '2023년 5월 27일']);\n  let [따봉, 따봉변경] = useState([0, 0, 0, 0]);\n  let [modal, setModal] = useState(false);\n\n\n  return (\n    <div className=\"App\">\n      <div className='black-nav'>\n      <h4>블로그 로고 입니다.</h4>\n      </div>\n      {/* <div className='list'>\n        <button onClick={() => {\n          let copy2 = [...글제목];\n          copy2.sort()\n          글제목변경(copy2);\n        }}>가나다순 정렬</button>\n      <span className='womanButton' onClick={() => {\n        // ...을 사용하는 이유는 기존 arr랑 신규 arr랑 다르다는것을 알려주기 위함임\n        let copy = [...글제목];\n        copy[0] = '여자 코트 추천';\n        글제목변경(copy);\n      }}>여자</span>\n        <h4>{글제목[0]} <span onClick={() => {따봉변경(따봉+1)}}>👍</span> {따봉} </h4>\n        <p>{날짜[0]}</p>\n      </div>\n      <div className='list'>\n        <h4>{글제목[1]}</h4>\n        <p>{날짜[1]}</p>\n      </div>\n      <div className='list'>\n        <h4>{글제목[2]}</h4>\n        <p>{날짜[2]}</p>\n      </div>\n      <div className='list'>\n        <h4 onClick={() => {\n          setModal(!modal)\n        }}>{글제목[3]}</h4>\n        <p>{날짜[3]}</p>\n      </div> */}\n\n      {\n        글제목.map(function(a, i){\n          return (\n            <div className='list' key = {i}>\n              \n              <h4 onClick={() => {\n                setModal(!modal)\n              }}>{ a } <span onClick={() => {\n                let copy3 = [...따봉]\n                copy3[i] += 1\n                따봉변경(copy3)\n                }\n                }>👍</span> {따봉[i]}  </h4>\n\n              <p>{날짜[i]}</p>\n            </div>\n          )\n        })\n      }\n\n      {\n        modal == true ? <Modal 글제목 = {글제목} /> : null\n      }\n\n    </div>\n  );\n}\n\n// 컴포넌트 만들기\n/* \n  컴포넌트를 언제 많이 사용하는가?\n    1. 반복적인 html 축약할 때\n    2. 큰 페이지들 만들때\n    3. 자주변경 되는 것들\n*/\n\nfunction Modal(props){\n  console.log(props)\n  return (\n    <div className='modal'>\n      <h4>{props.글제목[0]}</h4>\n      <p>날짜</p>\n      <p>상세내용</p>\n      <button>글수정</button>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/kimseongjun/Documents/GitHub/React/1/src/reportWebVitals.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"43","line":7,"column":7,"nodeType":"41","messageId":"42","endLine":7,"endColumn":11},{"ruleId":"39","severity":1,"message":"44","line":9,"column":13,"nodeType":"41","messageId":"42","endLine":9,"endColumn":18},{"ruleId":"39","severity":1,"message":"45","line":10,"column":12,"nodeType":"41","messageId":"42","endLine":10,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":71,"column":15,"nodeType":"48","messageId":"49","endLine":71,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'post' is assigned a value but never used.","'글제목변경' is assigned a value but never used.","'c' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]